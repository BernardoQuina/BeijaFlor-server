### This file was generated by Nexus Schema
### Do not make changes to this file directly


input BoolNullableFilter {
  equals: Boolean
  not: NestedBoolNullableFilter
}

type Category {
  createdAt: DateTime!
  id: String!
  image: String!
  mainCategory: MainCategory!
  name: String!
  products(cursor: ProductWhereUniqueInput, skip: Int, take: Int): [Product!]!
  subCategory: SubCategory!
  updatedAt: DateTime!
}

input CategoryWhereUniqueInput {
  id: String
  name: String
}

scalar DateTime

input DateTimeFilter {
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime!]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeFilter
  notIn: [DateTime!]
}

input EnumRoleFilter {
  equals: Role
  in: [Role!]
  not: NestedEnumRoleFilter
  notIn: [Role!]
}

enum MainCategory {
  Acessorios
  Flores
  Ocasiao
  Plantas
}

type Mutation {
  deleteUser(password: String): User
  editUser(confirmNewPassword: String, password: String, updateEmail: String, updateName: String, updatePassword: String, updatePhoto: String): User
  login(email: String!, password: String!): User
  logout: Boolean
  register(confirmPassword: String!, email: String!, name: String!, password: String!): User
}

input NestedBoolNullableFilter {
  equals: Boolean
  not: NestedBoolNullableFilter
}

input NestedDateTimeFilter {
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime!]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeFilter
  notIn: [DateTime!]
}

input NestedEnumRoleFilter {
  equals: Role
  in: [Role!]
  not: NestedEnumRoleFilter
  notIn: [Role!]
}

input NestedStringFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringFilter
  notIn: [String!]
  startsWith: String
}

input NestedStringNullableFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringNullableFilter
  notIn: [String!]
  startsWith: String
}

type Product {
  categories(cursor: CategoryWhereUniqueInput, skip: Int, take: Int): [Category!]!
  createdAt: DateTime!
  description: String!
  id: String!
  images: [String!]!
  name: String!
  price: Float!
  updatedAt: DateTime!
}

input ProductWhereUniqueInput {
  id: String
  name: String
}

type Query {
  me: User
  user(where: UserWhereUniqueInput!): User
  userCount: Int
  users(cursor: UserWhereUniqueInput, orderBy: [UserOrderByInput!], skip: Int, take: Int, where: UserWhereInput): [User!]!
}

enum QueryMode {
  default
  insensitive
}

enum Role {
  ADMIN
  USER
}

enum SortOrder {
  asc
  desc
}

input StringFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  mode: QueryMode
  not: NestedStringFilter
  notIn: [String!]
  startsWith: String
}

input StringNullableFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  mode: QueryMode
  not: NestedStringNullableFilter
  notIn: [String!]
  startsWith: String
}

enum SubCategory {
  arranjos
  calendario
  caracteristicas
  cerimonias
  cores
  estacao
  local
  momentosEspeciais
  outros
  tipos
  vasos
}

type User {
  cloudinaryPhoto: Boolean
  createdAt: DateTime!
  email: String!
  facebookId: String
  googleId: String
  id: String!
  name: String!
  passwordHash: String
  photo: String
  role: Role!
  updatedAt: DateTime!
}

input UserOrderByInput {
  cloudinaryPhoto: SortOrder
  createdAt: SortOrder
  email: SortOrder
  facebookId: SortOrder
  googleId: SortOrder
  id: SortOrder
  name: SortOrder
  passwordHash: SortOrder
  photo: SortOrder
  role: SortOrder
  updatedAt: SortOrder
}

input UserWhereInput {
  AND: [UserWhereInput!]
  NOT: [UserWhereInput!]
  OR: [UserWhereInput!]
  cloudinaryPhoto: BoolNullableFilter
  createdAt: DateTimeFilter
  email: StringFilter
  facebookId: StringNullableFilter
  googleId: StringNullableFilter
  id: StringFilter
  name: StringFilter
  passwordHash: StringNullableFilter
  photo: StringNullableFilter
  role: EnumRoleFilter
  updatedAt: DateTimeFilter
}

input UserWhereUniqueInput {
  email: String
  facebookId: String
  googleId: String
  id: String
}
